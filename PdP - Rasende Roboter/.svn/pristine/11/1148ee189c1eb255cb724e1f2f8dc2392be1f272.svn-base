package interactions;

import java.util.List;

import model.Constant.BoxType;
import model.Movement;
import model.Robot;
import model.Box;

/**
 * This is an event from probability theory. It contains the position of the robot at an 
 * exact moment and the last movement.
 * @author Dimitri
 * @version 1
 */
public class Event {
	/**
	 * The list of the robots
	 * @see List
	 * @see Robot
	 */
	List<Robot> mRobots;
	/**
	 * The last movement played
	 * If <code>null</code> this event is the initial position of the round
	 * @see Movement
	 */
	Movement mLastMovement;
	/**
	 * The event before this one. If we use a tree of probability, this is useless
	 */	

	/**
	 * Constructor
	 * @param mRobots
	 * @param mLastMovement
	 */
	public Event(List<Robot> mRobots, Movement mLastMovement) {
		super();
		this.mRobots = mRobots;
		this.mLastMovement = mLastMovement;
	}
	
	/**
	 * This method checks if the solution is found
	 * @param destination the box that the player must reach
	 * @param x
	 * @param y
	 * @return <code>true</code> if the destination is reached <code>false</code> otherwise
	 */
	public boolean reachedDestination(Box box, int x, int y){
		Robot robot = mLastMovement.getmRobot();
		System.out.println(robot.getColor() + " -> " +robot.getY()+" == "+x +" && "+ robot.getX() +" == "+ y);
		if(robot.getColor() == box.getColor() || box.getType() == BoxType.Multi){
			if(robot.getX() == y && robot.getY() == x)
				return true;
		}
		return false;
	}
}