package interactions;

import java.util.ArrayList;
import java.util.List;

import javax.swing.event.TreeModelListener;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;

/****
 * TROUVER une classe qui représente un arbre d'event !
 * 
 * @author Dimitri
 *
 */

public class ProbabilityTree implements TreeModel {

	private Node<Event> root;

	public ProbabilityTree(Event rootData) {
		// TODO Auto-generated constructor stub

		root = new Node<Event>();
		root.data = rootData;
		root.children = new ArrayList<Node<Event>>();
	}

	public static class Node<T> {
		private T data;
		private Node<T> parent;
		private List<Node<T>> children;
	}


	@Override
	public void addTreeModelListener(TreeModelListener l) {
		// TODO Auto-generated method stub

	}

	@Override
	public Object getChild(Object parent, int index) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getChildCount(Object parent) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getIndexOfChild(Object parent, Object child) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Object getRoot() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean isLeaf(Object node) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void removeTreeModelListener(TreeModelListener l) {
		// TODO Auto-generated method stub

	}

	@Override
	public void valueForPathChanged(TreePath path, Object newValue) {
		// TODO Auto-generated method stub

	}

}
